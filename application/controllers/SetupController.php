<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class SetupController extends CI_Controller {    private $timestamp;    public $admin_id;    private $dist_id;    public $project;    public function __construct() {        parent::__construct();        $this->load->model('Common_model');        $this->load->model('Finane_Model');        $this->load->model('Inventory_Model');        $this->load->model('Sales_Model');        $this->timestamp = date('Y-m-d H:i:s');        $this->admin_id = $this->session->userdata('admin_id');        $this->dist_id = $this->session->userdata('dis_id');        if (empty($this->admin_id) || empty($this->dist_id)) {            redirect(site_url());        }        $this->project = $this->session->userdata('project');        $this->db_hostname = $this->session->userdata('db_hostname');        $this->db_username = $this->session->userdata('db_username');        $this->db_password = $this->session->userdata('db_password');        $this->db_name = $this->session->userdata('db_name');        $this->db->close();        $config_app = switch_db_dinamico($this->db_username, $this->db_password, $this->db_name);        $this->db = $this->load->database($config_app, TRUE);    }    public function employeeList() {        $condition = array(            'dist_id' => $this->dist_id,            'isActive' => 'Y',            'isDelete' => 'N',        );        $data['title'] = 'Employee List';        /*page navbar details*/        $data['title'] = get_phrase('Sale_Invoice_Edit');        $data['page_type'] = get_phrase($this->page_type);        $data['link_page_name'] = get_phrase('New_Sale_Invoice');        $data['link_page_url'] = 'salesInvoice_add';        $data['link_icon'] = "<i class='fa fa-plus'></i>";        $data['second_link_page_name'] = get_phrase('Invoice_List');        $data['second_link_page_url'] = 'salesInvoiceLpg';        $data['second_link_icon'] = $this->link_icon_list;        $data['third_link_page_name'] = get_phrase('Sale Invoice View');        $data['third_link_page_url'] = 'salesInvoice_view/' . 1;        $data['third_link_icon'] = $this->link_icon_edit;        /*page navbar details*/        $data['employeeList'] = $this->Common_model->get_data_list_by_many_columns('employee', $condition);        $data['mainContent'] = $this->load->view('distributor/setup/employee/employeeLisst', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function employeeAdd() {        if (isPostBack()) {            $profileName = $_FILES['profile']['name'];            if (!empty($profileName)) {                $profilename1 = explode(".", $profileName);                $extension = end($profilename1);                $base_name = $profilename1[0];                if (file_exists("uploads/employee/" . $_FILES['profile']['name'])) {                    $profileName = $base_name . "_" . time() . "." . $extension;                }                move_uploaded_file($_FILES['profile']['tmp_name'], "uploads/employee/" . $profileName);                $data['profile'] = $profileName;            } else {                $data['profile'] = '';            }            $data['name'] = $this->input->post('name');            $data['employeeId'] = $this->input->post('employeeId');            $data['fathersName'] = $this->input->post('fathersName');            $data['mothersName'] = $this->input->post('mothersName');            $data['presentAddress'] = $this->input->post('presentAddress');            $data['permanentAddress'] = $this->input->post('permanentAddress');            $data['dateOfBirth'] = date('Y-m-d',  strtotime($this->input->post('dateOfBirth')));            $data['gender'] = $this->input->post('gender');            $data['nationalId'] = $this->input->post('nationalId');            $data['religion'] = $this->input->post('religion');            $data['emailAddress'] = $this->input->post('emailAddress');            $data['homeDistrict'] = $this->input->post('homeDistrict');            $data['personalMobile'] = $this->input->post('personalMobile');            $data['maritalStatus'] = $this->input->post('maritalStatus');            $data['officeMobile'] = $this->input->post('officeMobile');            $data['bloodGroup'] = $this->input->post('bloodGroup');            $data['joiningDate'] =date('Y-m-d',  strtotime($this->input->post('joiningDate')));            $data['employeeType'] = $this->input->post('employeeType');            $data['salary'] = $this->input->post('salary');            $data['empStatus'] = $this->input->post('empStatus');            $data['createdBy'] = $this->admin_id;            $data['isActive'] = 'Y';            $data['isDelete'] = 'N';            $data['dist_id'] = $this->dist_id;            $this->Common_model->insert_data('employee', $data);            $msg =  $this->config->item("save_success_message");            $this->session->set_flashdata('success', $msg);            redirect($this->project.'/employeeList' , 'refresh');        }        $condition = array(            'isActive' => 'Y',            'isDelete' => 'N',        );        $data['title'] = 'Employee Add';        $data['religion'] = $this->Common_model->get_data_list_by_many_columns('religion', $condition);        $data['districts'] = $this->Common_model->get_data_list('districts', 'name', 'ASC');        $data['bloodGroup'] = $this->Common_model->get_data_list('blood_group', 'bloodName', 'ASC');        $data['mainContent'] = $this->load->view('distributor/setup/employee/addNewEmployee', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function employeeEdit($editId) {        if (isPostBack()) {            $profileName = $_FILES['profile']['name'];            if (!empty($profileName)) {                $profilename1 = explode(".", $profileName);                $extension = end($profilename1);                $base_name = $profilename1[0];                if (file_exists("uploads/employee/" . $_FILES['profile']['name'])) {                    $profileName = $base_name . "_" . time() . "." . $extension;                }                move_uploaded_file($_FILES['profile']['tmp_name'], "uploads/employee/" . $profileName);                $data['profile'] = $profileName;            } else {                $data['profile'] = $this->input->post('oldImage');            }            $data['name'] = $this->input->post('name');            $data['employeeId'] = $this->input->post('employeeId');            $data['fathersName'] = $this->input->post('fathersName');            $data['mothersName'] = $this->input->post('mothersName');            $data['presentAddress'] = $this->input->post('presentAddress');            $data['permanentAddress'] = $this->input->post('permanentAddress');            $data['dateOfBirth'] = date('Y-m-d',strtotime($this->input->post('dateOfBirth')));            $data['gender'] = $this->input->post('gender');            $data['nationalId'] = $this->input->post('nationalId');            $data['religion'] = $this->input->post('religion');            $data['emailAddress'] = $this->input->post('emailAddress');            $data['homeDistrict'] = $this->input->post('homeDistrict');            $data['personalMobile'] = $this->input->post('personalMobile');            $data['maritalStatus'] = $this->input->post('maritalStatus');            $data['officeMobile'] = $this->input->post('officeMobile');            $data['bloodGroup'] = $this->input->post('bloodGroup');            $data['joiningDate'] = date('Y-m-d',  strtotime($this->input->post('joiningDate')));            $data['employeeType'] = $this->input->post('employeeType');            $data['salary'] = $this->input->post('salary');            $data['empStatus'] = $this->input->post('empStatus');            $data['createdBy'] = $this->admin_id;            $data['isActive'] = 'Y';            $data['isDelete'] = 'N';            $data['dist_id'] = $this->dist_id;            $this->Common_model->update_data('employee', $data,'id',$editId);            $msg =  $this->config->item("save_success_message");            $this->session->set_flashdata('success', $msg);            redirect($this->project.'/employeeList' , 'refresh');        }        $condition = array(            'isActive' => 'Y',            'isDelete' => 'N',        );        $data['title'] = 'Employee Edit';        $data['editEmp'] = $this->Common_model->get_single_data_by_single_column('employee', 'id',$editId);        $data['religion'] = $this->Common_model->get_data_list_by_many_columns('religion', $condition);        $data['districts'] = $this->Common_model->get_data_list('districts', 'name', 'ASC');        $data['bloodGroup'] = $this->Common_model->get_data_list('blood_group', 'bloodName', 'ASC');        $data['mainContent'] = $this->load->view('distributor/setup/employee/editEmployee', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function employeeDelete($deleteId){        $data['isDelete']='Y';        $data['deletedAt']=$this->timestamp;        $data['deletedBy']=$this->admin_id;        $this->Common_model->update_data('employee',$data,'id',$deleteId);        message("Your data successfully deleted from database");        redirect(site_url('employeeList'));    }    public function vehicleList() {        $condition = array(            'dist_id' => $this->dist_id,            'isActive' => 'Y',            'isDelete' => 'N',        );        $data['title'] = 'Vehicle List';        $data['vehicleList'] = $this->Common_model->get_data_list_by_many_columns('vehicle', $condition);        $data['mainContent'] = $this->load->view('distributor/setup/vehicle/vehicleList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function vehicleAdd() {        if (isPostBack()) {            $data['vehicleName'] = $this->input->post('vehicleName');            $data['vehicleModel'] = $this->input->post('vehicleModel');            $data['chassisNumber'] = $this->input->post('chassisNumber');            $data['numberPlate'] = $this->input->post('numberPlate');            $data['createdBy'] = $this->admin_id;            $data['dist_id'] = $this->dist_id;            $data['isActive'] = 'Y';            $data['isDelete'] = 'N';            $this->Common_model->insert_data('vehicle', $data);            message("Your data successfully inserted into database.");            redirect(site_url('vehicleList'));        }        $data['title'] = 'Vehicle List';        $data['mainContent'] = $this->load->view('distributor/setup/vehicle/addNew', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function vehicleEdit($editId) {        if (isPostBack()) {            $data['vehicleName'] = $this->input->post('vehicleName');            $data['vehicleModel'] = $this->input->post('vehicleModel');            $data['chassisNumber'] = $this->input->post('chassisNumber');            $data['numberPlate'] = $this->input->post('numberPlate');            $this->Common_model->update_data('vehicle', $data, 'id', $editId);            message("Your data successfully Updated into database.");            redirect(site_url('vehicleList'));        }        $data['title'] = 'Vehicle Update';        $data['vehicleList'] = $this->Common_model->get_single_data_by_single_column('vehicle', 'id', $editId);        $data['mainContent'] = $this->load->view('distributor/setup/vehicle/editVehicle', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function vehicleDelete($vehicleId) {        $data['isDelete'] = 'Y';        $data['deletedBy'] = $this->admin_id;        $data['deletedAt'] = $this->timestamp;        $this->Common_model->update_data('vehicle', $data, 'id', $vehicleId);        message("Your data successfylly deleted from database.");        redirect(site_url('vehicleList'));    }    public function incentiveList() {        if (isPostBack()) {            $data['company'] = $this->input->post('company');            $data['targetQty'] = $this->input->post('targetQty');            $data['start'] = date('Y-m-d', strtotime($this->input->post('start')));            $data['end'] = date('Y-m-d', strtotime($this->input->post('end')));            $data['incentive'] = $this->input->post('incentive');            $data['dist_id'] = $this->dist_id;            $data['status'] = 1;            $data['updatedBy'] = $this->admin_id;            $this->Common_model->insert_data('incentive', $data);        }        $data['companyList'] = $this->Common_model->getPublicBrand($this->dist_id);        $data['incentiveList'] = $this->Common_model->get_data_list_by_single_column('incentive', 'dist_id', $this->dist_id);        $data['title'] = 'Incentive List';        $data['mainContent'] = $this->load->view('distributor/setup/incentive', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function checkDuplicateBrandForUpdate() {        $brandId = $this->input->post('brandId');        $brandName = $this->input->post('brandName');        $brandList = $this->db->get_where('brand', array('brandId !=' => $brandId, 'brandName' => $brandName))->row();        if (!empty($brandList)) {            echo 1;        }    }    function userMessageList() {        $this->db->select("*");        $this->db->from("messageuser");        $this->db->join("message", "message.msgId=messageuser.msgid");        $this->db->where('messageuser.userid', $this->dist_id);        $this->db->order_by('message.msgId', 'DESC');        $data['allMessage'] = $this->db->get()->result();        $data['title'] = 'Message List';        $data['mainContent'] = $this->load->view('distributor/message/messageList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function userAllOfferList() {        $this->db->select("*");        $this->db->from("offer");        $this->db->order_by('offerId', 'DESC');        $data['allOffer'] = $this->db->get()->result();        $data['title'] = 'Offer List';        $data['mainContent'] = $this->load->view('distributor/offer/offerList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function newDecision() {        if (isPostBack()) {            $insertId = $this->Common_model->insert_data('newDecision', $_POST);            if (!empty($insertId)) {                message("Your data successfully inserted into database.");                redirect(site_url('newDecisionList'));            }        }        $data = array();        $data['title'] = 'Decision Tools';        $dist_id = $this->session->userdata('dist_id');        $data['login'] = $this->session->userdata('login');        $data['s_info'] = $this->Common_model->get_data_list_by_single_column('tbl_stock', 'dist_id', $this->dist_id);        $data['dist_name'] = $this->session->userdata('dist_name');        $data['dist_id'] = $this->session->userdata('dist_id');        $data['mainContent'] = $this->load->view('distributor/setup/decision/newDecision', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function newDecisionList() {        $data['newDecisionList'] = $this->Common_model->get_data_list('newDecision', 'percentage', 'DESC');        $data['title'] = 'Decision Compare';        $data['mainContent'] = $this->load->view('distributor/setup/decision/newDecisionList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function updatePassword($dist_id = null) {        $data = array();        $data['title'] = 'Change Password';        $data['dist_id'] = $this->dist_id;        $data['login'] = $this->session->userdata('login');        $data['dist_name'] = $this->session->userdata('dist_name');        //$dist_id = $this->session->userdata('dist_id');        $data['dist_info'] = $this->Common_model->get_single_data_by_single_column('admin', 'admin_id', $this->admin_id);        $data['mainContent'] = $this->load->view('distributor/setup/profile/chng_pass', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function change_password() {        $this->form_validation->set_rules('currentPassword', 'Current Password', 'required');        $this->form_validation->set_rules('admin_password1', 'New Password', 'required');        $this->form_validation->set_rules('admin_password2', 'Confirm Password', 'required');        if ($this->form_validation->run() == FALSE) {            exception("Required field can't be empty.");            redirect(site_url('updatePassword/' . $this->admin_id));        } else {            $data = array();            $current_password1 = md5($this->input->post('currentPassword'));            $admin_password1 = md5($this->input->post('admin_password1'));            $admin_password2 = md5($this->input->post('admin_password2'));            $condition = array(                'admin_id' => $this->admin_id,                'password' => $current_password1,            );            //checkCurrent password            $adminInfo = $this->Common_model->get_single_data_by_many_columns('admin', $condition);            if (empty($adminInfo)) {                //current password not match                exception("Current password does't match!!");                redirect(site_url('updatePassword/' . $this->admin_id));            }            if ($admin_password1 != $admin_password2) {                //password not match confirm password                exception("Given password does't match with confirm password.");                redirect('updatePassword/' . $this->admin_id);            } else {                //every thing is ok.password change successfully                $data['lastUpdate'] = $this->timestamp;                $data['password'] = md5($this->input->post('admin_password1'));                $updated = $this->Common_model->update_data('admin', $data, 'admin_id', $this->admin_id);                if (!empty($updated)):                    message("Password successfully change.");                    redirect('distributor_profile');                else:                    exception("Password does't updated.");                    redirect('distributor_profile');                endif;            }        }    }    public function distributor_profile() {        $data = array();        $data['title'] = 'Profile';        $data['dist_id'] = $this->dist_id;        $data['dist_name'] = $this->session->userdata('dist_name');        $data['login'] = $this->session->userdata('login');        $dist_id = $this->dist_id;        $data['adminInfo'] = $this->Common_model->get_single_data_by_single_column('admin', 'admin_id', $this->admin_id);        $data['mainContent'] = $this->load->view('distributor/setup/profile/dist_profile', $data, true);        $this->load->view('distributor/masterTemplate', $data);    }    public function decision_tools() {        $data = array();        $data['title'] = 'Decision Tools';        $dist_id = $this->session->userdata('dist_id');        $data['login'] = $this->session->userdata('login');        //$data['s_info'] = $this->Common_model->get_data_list_by_single_column('tbl_stock', 'dist_id', $this->dist_id);        $data['dist_name'] = $this->session->userdata('dist_name');        $data['dist_id'] = $this->session->userdata('dist_id');        $data['mainContent'] = $this->load->view('distributor/setup/decision/decision_form', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    //new    public function save_decision_tools() {        $data['dec_title'] = $this->input->post('dec_title', TRUE);        $data['asset_amount'] = $this->input->post('asset_amount', TRUE);        $data['invest_type'] = $this->input->post('invest_type', TRUE);        $data['note'] = $this->input->post('note', TRUE);        $data['dist_id'] = $this->dist_id;        $data['bank_saving_type'] = $this->input->post('bank_saving_type', TRUE);        $data['amount_of_saving'] = $this->input->post('amount_of_saving', TRUE);        $data['period_time'] = $this->input->post('period_time', TRUE);        $data['interest_per_month'] = $this->input->post('interest_per_month', TRUE);        $data['per_month_interest_amount'] = $this->input->post('per_month_interest_amount', TRUE);        $data['company_name'] = $this->input->post('company_name', TRUE);        $data['invest_amount'] = $this->input->post('invest_amount', TRUE);        $data['per_month_profit_amount'] = $this->input->post('per_month_profit_amount', TRUE);        $data['return_of_invest_time'] = $this->input->post('return_of_invest_time', TRUE);        $this->Common_model->insert_data('tbl_decision', $data);        redirect(site_url('compare_decision'));    }    //new    public function compare_decision() {        $data = array();        $data['title'] = 'Compare Decision';        $dist_id = $this->dist_id;        $data['login'] = $this->session->userdata('login');        $data['offer_info'] = $this->Common_model->compare_decision_info($this->dist_id);        $data['dist_name'] = $this->session->userdata('dist_name');        $data['dist_id'] = $this->session->userdata('dist_id');        //$data['s_info'] = $this->Common_model->get_data_list_by_single_column('tbl_stock', 'dist_id', $this->dist_id);        $data['mainContent'] = $this->load->view('distributor/setup/decision/compare_decision', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    public function SystemConfig() {        if (isPostBack()) {            $data['companyName'] = $this->input->post('companyName');            $data['phone'] = $this->input->post('phone');            $data['email'] = $this->input->post('email');            $data['address'] = $this->input->post('address');            $data['website'] = $this->input->post('website');            $data['dist_id'] = $this->dist_id;            $data['vat'] = $this->input->post('vat');            if (!empty($this->input->post('image')[0])):                $data['logo'] = $this->input->post('image')[0];            endif;            $data['updated_at'] = $this->timestamp;            $data['updated_by'] = $this->admin_id;            $exits = $this->Common_model->get_single_data_by_single_column('system_config', 'dist_id', $this->dist_id);            if (!empty($exits)):                message("Your System Configuration successfully updated into database.");                $this->Common_model->update_data('system_config', $data, 'dist_id', $this->dist_id);            else:                message("Your System Configuration successfully inserted into database.");                $this->Common_model->insert_data('system_config', $data, 'dist_id', $this->dist_id);            endif;            redirect(site_url('SystemConfig'));        }        $data['title'] = 'System || Config';        $data['configInfo'] = $this->Common_model->get_single_data_by_single_column('system_config', 'dist_id', $this->dist_id);        $data['mainContent'] = $this->load->view('distributor/setup/systemConfg', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function getAllMessage() {        $this->db->select("*");        $this->db->from("messageuser");        $this->db->join("message", "message.msgId=messageuser.msgid");        $this->db->where("messageuser.userid", $this->dist_id);        $data['allMessage'] = $this->db->get()->result();        // echo $this->db->last_query();die;        $data['title'] = 'All Message';        $data['mainContent'] = $this->load->view('distributor/message/messageList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function saveNewSupplier() {        $data['supID'] = $this->input->post('supplierId');        $data['supName'] = $this->input->post('supName');        $data['supEmail'] = $this->input->post('supEmail');        $data['supPhone'] = $this->input->post('supPhone');        $data['supAddress'] = $this->input->post('supAddress');        $data['dist_id'] = $this->dist_id;        $data['updated_by'] = $this->admin_id;        $insertID = $this->Common_model->insert_data('supplier', $data);        if (!empty($insertID)):            echo '<option value="' . $insertID . '" selected="selected">' . $data['supID'] . ' [ ' . $data['supName'] . ' ] ' . '</option>';        endif;    }    function userStatusChange() {        $userId = $this->input->post('userId');        $data['status'] = $this->input->post('status');        $this->Common_model->update_data('admin', $data, 'admin_id', $userId);        $msg = 'User Status Change Successfully';        $this->session->set_flashdata('success', $msg);        echo 1;    }    function userList() {        $data['title'] = 'User List';        $data['userList'] = $this->Common_model->get_data_list_by_single_column('admin', 'distributor_id', $this->dist_id);        $data['mainContent'] = $this->load->view('distributor/setup/user/userList', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function addUser() {        if (isPostBack()) {            $data['name'] = $this->input->post('name');            $data['phone'] = $this->input->post('phone');            $data['email'] = $this->input->post('email');            $data['password'] = md5($this->input->post('password'));            $data['distributor_id'] = $this->dist_id;            $data['accessType'] = 2;            $data['type'] = 'Master';            $data['status'] = '1';            $data['updated_by'] = $this->admin_id;            $insertId = $this->Common_model->insert_data('admin', $data);            if (!empty($insertId)) {                message("New User Created successfully.");                redirect(site_url('userList'));            }        }        $data['title'] = 'User List';        $data['userList'] = $this->Common_model->get_data_list_by_single_column('admin', 'distributor_id', $this->dist_id);        $data['mainContent'] = $this->load->view('distributor/setup/user/addUser', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function editUser($editId) {        if (isPostBack()) {            $data['name'] = $this->input->post('name');            $data['phone'] = $this->input->post('phone');            $data['email'] = $this->input->post('email');            $data['distributor_id'] = $this->dist_id;            $data['updated_by'] = $this->admin_id;            $this->Common_model->update_data('admin', $data, 'admin_id', $editId);            message("User update successfully.");            redirect(site_url('userList'));        }        $data['title'] = 'User List';        $data['editInfo'] = $this->Common_model->get_single_data_by_single_column('admin', 'admin_id', $editId);        $data['userList'] = $this->Common_model->get_data_list_by_single_column('admin', 'distributor_id', $this->dist_id);        $data['mainContent'] = $this->load->view('distributor/setup/user/editUser', $data, true);        $this->load->view('distributor/masterDashboard', $data);    }    function deletedata() {        dumpVar($_POST);        $table = $this->input->post('table');        $column = $this->input->post('column');        $id = $this->input->post('id');        $type = $this->input->post('type');        $condition = array(            'dist_id' => $this->dist_id,            'ledger_type' => $type,            'client_vendor_id' => $id,        );        $transactionExit = $this->Common_model->get_single_data_by_many_columns('client_vendor_ledger', $condition);        if (empty($transactionExit)) {            $this->Common_model->delete_data($table, $column, $id);            message("Your data successfully deleted from database.");            echo 1;        } else {            if ($type == 1) {                exception("This customer can't be deleted.already have a transaction  by this customer!");                echo 1;            } else {                exception("This Supplier can't be deleted.already have a transaction  by this supplier!");                echo 1;            }        }    }    function supplierDelete() {        $id = $this->input->post('id');        $condition = array(            'dist_id' => $this->dist_id,            'ledger_type' => 2,            'client_vendor_id' => $id,        );        $transactionExit = $this->Common_model->get_single_data_by_many_columns('client_vendor_ledger', $condition);        if (empty($transactionExit)) {            $this->Common_model->delete_data('supplier', 'sup_id', $id);            message("Your data successfully deleted from database.");            echo 1;        } else {            exception("This supplier can't be deleted.already have a transaction  by this supplier!");            echo 1;        }    }    function checkDuplicateBrand() {        $brandName = $this->input->post('brandName');        if (!empty($brandName)):            $duplicateBrandCondition = array(                'brandName' => $brandName,                'dist_id' => $this->dist_id,            );            $exitsBrandName = $this->Common_model->get_single_data_by_many_columns('brand', $duplicateBrandCondition);            if (!empty($exitsBrandName)) {                echo "1";            } else {                echo 2;            }        else:            echo 2;        endif;    }    function checkDuplicateUnit() {        $unitName = $this->input->post('unitName');        if (!empty($unitName)):            $exitsUnitName = $this->Common_model->cehckDuplicateUnit($unitName, $this->dist_id);            if (!empty($exitsUnitName)) {                echo "1";            } else {                echo 2;            }        else:            echo 2;        endif;    }    function checkDuplicateEmailForUser() {        $email = $this->input->post('email');        if (!empty($email)):            $condition = array(                'email' => $email,                'distributor_id' => $this->dist_id,            );            $exitsSup = $this->Common_model->get_single_data_by_many_columns('admin', $condition);            if (!empty($exitsSup)) {                echo "1";            } else {                echo 2;            }        else:            echo 2;        endif;    }    function checkDuplicateEmailForUserEdit() {        $email = $this->input->post('email');        $adminId = $this->input->post('adminId');        if (!empty($email)):            $condition = array(                'email' => $email,                'distributor_id' => $this->dist_id,                'admin_id !=' => $adminId,            );            $exitsSup = $this->Common_model->get_single_data_by_many_columns('admin', $condition);            if (!empty($exitsSup)) {                echo "1";            } else {                echo 2;            }        else:            echo 2;        endif;    }    function checkDuplicateCategory() {        $catName = $this->input->post('catName');        $condition = array(            'dist_id' => $this->dist_id,            'title' => $catName        );        $exitsData = $this->Common_model->checkPublicProductCat($catName);        if (!empty($exitsData)) {            echo 1;        } else {            echo 2;        }    }    function checkDuplicateCategoryforUpdate() {        $catName = $this->input->post('catName');        $updatedID = $this->input->post('updatedID');        $condition = array(            'dist_id' => $this->dist_id,            'title' => $catName,            'category_id !=' => $updatedID        );        $this->db->select("*");        $this->db->from("productcategory");        $this->db->where('dist_id', $this->dist_id);        $this->db->where('title', $catName);        $this->db->where('category_id', $updatedID);        $exitsData = $this->Common_model->get_single_data_by_many_columns('productcategory', $condition);        //echo $this->db->last_query();die;        if (!empty($exitsData)) {            echo 1;        } else {            echo 2;        }    }}